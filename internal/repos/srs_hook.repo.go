/*
generated by comer,https://github.com/imoowi/comer
Copyright © 2023 jun<simpleyuan@gmail.com>
*/
package repos

import (
	"encoding/json"

	"github.com/gin-gonic/gin"
	"github.com/imoowi/comer/interfaces/impl"
	"github.com/imoowi/live-stream-server/internal/global"
	"github.com/imoowi/live-stream-server/internal/models"
)

var SrsHook *SrsHookRepo

type SrsHookRepo struct {
	impl.Repo[*models.SrsHook]
}

func NewSrsHookRepo() {
	db := global.MysqlDb
	SrsHook = &SrsHookRepo{
		Repo: *impl.NewRepo[*models.SrsHook](db),
	}
}

func init() {
	RegisterRepos(NewSrsHookRepo)
}

func (r *SrsHookRepo) Log(c *gin.Context, stream string, data map[string]any) (ok bool, err error) {
	model := &models.SrsHook{}
	model.SetTableName(`srs_hook_log` + stream)
	db := r.DB.Client
	r.DB.Client.Set("gorm:table_options", "ENGINE=InnoDB,COMMENT='srshook_log表'").AutoMigrate(&model)
	jsonData, err := json.Marshal(data)
	if err != nil {
		return
	}
	err = json.Unmarshal(jsonData, &model)
	if err != nil {
		return
	}
	err = db.Save(&model).Error
	return
}
